    "DQN_Agents": {
        "epsilon_decay_rate_denominator": config.num_episodes_to_run/100,
        "stop_exploration_episode":config.num_episodes_to_run-10,
        "random_episodes_to_run":0,
        "linear_hidden_units": [15,10,7],
        "learning_rate": 0.01,
        "buffer_size": 10000,
        "batch_size": 64,
        "final_layer_activation": None,
        # "columns_of_data_to_be_embedded": [0],
        # "embedding_dimensions": embedding_dimensions,
        "batch_norm": False,
        "gradient_clipping_norm": 5,
        "update_every_n_steps": 1,
        "tau": 0.01,
        "discount_rate": 0.99,
        "learning_iterations": 1,
        "exploration_cycle_episodes_length": None,
        "learning_iterations": 1,
        "clip_rewards": False
    },

config.num_episodes_to_run = 1000
config.exp_name="4x3"
config.use_GPU = True
config.should_load_model=False
config.should_save_model=True

config.file_to_save_data_results = "Data_and_Graphs/Adaptive_Routing.pkl"
config.file_to_save_results_graph = "Data_and_Graphs/Adaptive_Routing.png"
config.show_solution_score = False
config.visualise_individual_results = False
config.visualise_overall_agent_results = True
config.standard_deviation_results = 1.0
config.runs_per_agent = 1
config.overwrite_existing_results_file = True
config.randomise_random_seed = True
config.save_model = True

self.change_traffic_condition(sim_time,50,400)

def is_terminal(self,sim_time):
			"""
			check for some terminal condition. e.g. all vehicles exited the simulation or the time limit has passed

			"""
			# traci.simulation.getMinExpectedNumber() == 0 or
			return sim_time%4000==3999
